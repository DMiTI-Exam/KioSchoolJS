import{Graph}from"../../kioschool/basic/model/Graph.js";export class DijkstraGraph extends Graph{constructor(){super()}getAmountOfVertexesInTree(){let sum=0;for(let vertex of this.vertexesGetter()){if(vertex.inTreeGetter()){sum+=1}}return sum}getNextSelection(){let vert=null;for(let i=0;i<this.vertexesGetter().length;i++){let vertex=this.vertexesGetter()[i];if((vert==null||vert.weightGetter()>vertex.weightGetter())&&!vertex.inTreeGetter()){vert=vertex}}return vert}getAdjWith(v){let adjVertexes=[];for(let i=0;i<this.edgesGetter().length;i++){let edge=this.edgesGetter()[i];let vertex=null;if(edge.sourceGetter()===v&&!edge.targetGetter().inTreeGetter()){vertex=edge.targetGetter()}else if(edge.targetGetter()===v&&!edge.sourceGetter().inTreeGetter()){vertex=edge.sourceGetter()}if(vertex!=null){adjVertexes.push(vertex)}}return adjVertexes}getEdgeToTree(v1){let ee=null;let curWeight=1e3;for(let i=0;i<this.vertexesGetter().length;i++){let vertex=this.vertexesGetter()[i];if(!vertex.inTreeGetter()){continue}let e=this.getEdge(v1,vertex);if(e!=null){let weight=e.weightGetter()+vertex.weightGetter();if(ee==null||curWeight>weight){ee=e;curWeight=weight}}}return ee}}