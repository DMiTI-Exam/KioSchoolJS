import{ILayoutable}from"./ILayoutable.js";import{StringUtils}from"../../util/StringUtils.js";import{TextField}from"../../../additionalComponents/TextField.js";export class ComponentLayout{static CONTAINER_PSEUDONYM="root";static BOUND_DELIMITER=";";static DIGITS=["1","2","3","4","5","6","7","8","9","0"];static OPERATIONS_ADD=["+","-"];static OPERATIONS_MUL=["*","/"];#componentNames=new Map;#componentBounds=new Map;#container;#rootWidth;#rootHeight;#scaleX=1;#scaleY=1;#xdimension;#field;constructor(container,width=-1,height=-1){this.#container=container;this.#componentNames.set(ComponentLayout.CONTAINER_PSEUDONYM,container);this.#rootWidth=width;this.#rootHeight=height}addComponent(component,name,bounds){this.#componentNames.set(name,component);this.#componentBounds.set(name,bounds);let componentBounds=component.getBounds();if(this.#rootWidth!==-1){if(componentBounds.width>this.#rootWidth){component.setBounds(componentBounds.x,componentBounds.y,this.#rootWidth,componentBounds.height)}if(componentBounds.height>this.#rootHeight){component.setBounds(componentBounds.x,componentBounds.y,componentBounds.width,this.#rootHeight)}}this.#container.addChild(component)}layout(){let container=this.#container;if(container!=null){while(!(container instanceof createjs.Stage)){this.#scaleX*=container.scaleX;this.#scaleY*=container.scaleY;container=container.parent}}for(let key of this.#componentNames){if(key===ComponentLayout.CONTAINER_PSEUDONYM){continue}let comp=this.#componentNames.get(key);let str=this.#componentBounds.get(key);if(str==null){continue}let sBounds=str.split(ComponentLayout.BOUND_DELIMITER);this.#xdimension=true;comp.getBounds().x=this._getValue(StringUtils.toArray(sBounds[0]));this.#xdimension=false;comp.getBounds().y=this._getValue(StringUtils.toArray(sBounds[1]));this.#field=comp instanceof createjs.Text||comp.name==="TextField";this.#xdimension=true;comp.getBounds().width=this._getValue(StringUtils.toArray(sBounds[2]));this.#xdimension=false;comp.getBounds().height=this._getValue(StringUtils.toArray(sBounds[3]));this.#field=false;if(comp instanceof ILayoutable){comp.getLayout().layout()}}}_getValue(sExpression){let resultValue=this.#getItem(sExpression);while(sExpression.length>0&&ComponentLayout.OPERATIONS_ADD.indexOf(sExpression[0])!==-1){let addOp=sExpression[0];sExpression.shift();let secondOp=this.#getItem(sExpression);if(addOp==="+"){resultValue+=secondOp}else if(addOp==="-"){resultValue-=secondOp}}return resultValue}#getItem(sItem){let resultValue=this.#getFactor(sItem);while(sItem.length>0&&ComponentLayout.OPERATIONS_MUL.indexOf(sItem[0])!==-1){let mulOp=sItem[0];sItem.shift();let secondOp=this.#getFactor(sItem);if(mulOp==="*"){resultValue*=secondOp}else if(mulOp==="/"){resultValue/=secondOp}}return resultValue}#getFactor(sFactor){if(ComponentLayout.DIGITS.indexOf(sFactor[0])!==-1){return this.#getNumber(sFactor)}else if(sFactor[0]==="("){sFactor.shift();let resultValue=this._getValue(sFactor);sFactor.shift();return resultValue}return this.#getComponentValue(sFactor)}#getNumber(sNumber){let count=0;while(count<sNumber.length&&ComponentLayout.DIGITS.indexOf(sNumber[count])!==-1){count++}let str1=StringUtils.toString(sNumber.slice(0,count));for(let i=0;i<count;i++){sNumber.shift()}if(sNumber.length>0&&sNumber[0]==="r"){sNumber.shift();return parseInt(str1)}else{if(this.#xdimension){return parseInt(str1)/this.#scaleX}else{return parseInt(str1)/this.#scaleY}}}#getComponentValue(sComponentBounds){let count=0;while(count<sComponentBounds.length&&ComponentLayout.OPERATIONS_ADD.indexOf(sComponentBounds[count])===-1&&ComponentLayout.OPERATIONS_MUL.indexOf(sComponentBounds[count])===-1){count++}let str1=StringUtils.toString(sComponentBounds.slice(0,count));for(let i=0;i<count;i++){sComponentBounds.shift()}count=0;while(str1.charAt(count)!=="."){count++}let sName=str1.substring(0,count);let sBound=str1.substring(count+1);let comp=this.#componentNames[sName];let scaleX=1;let scaleY=1;if(sName==="root"){scaleX=comp.scaleX;scaleY=comp.scaleY}if(sBound==="top"){return comp.y/scaleY}else if(sBound==="bottom"){return(comp.y+comp.getBounds().height)/scaleY}else if(sBound==="right"){return(comp.x+comp.getBounds().width)/scaleX}else if(sBound==="left"){return comp.x/scaleX}else if(sBound==="width"){if(sName==="root"&&this.#rootWidth!==-1){return this.#rootWidth}else{return comp.getBounds().width/scaleX}}else if(sBound==="height"){if(sName==="root"&&this.#rootHeight!==-1){return this.#rootHeight}else{return comp.getBounds().height/scaleY}}return 0}}